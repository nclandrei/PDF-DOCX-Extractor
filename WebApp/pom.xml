<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>uk.ac.glasgow.dcs.psd</groupId>
	<artifactId>WebApp</artifactId>
	<version>4.0-MILESTONE</version>
	<packaging>jar</packaging>

	<name>WebApp</name>
	<description>PSD Team project Web application for PDF/DOC extraction</description>

    <contributors>
        <contributor>
            <name>Andrei Nicolae</name>
        </contributor>
        <contributor>
            <name>Edvinas Simkus</name>
        </contributor>
        <contributor>
            <name>Richard Pearson</name>
        </contributor>
        <contributor>
            <name>Ivan Kyosev</name>
        </contributor>
        <contributor>
            <name>Ian Denev</name>
        </contributor>
    </contributors>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.0.RELEASE</version>
		<relativePath/>
	</parent>

	<repositories>
		<repository>
			<id>project.local</id>
			<name>project</name>
			<url>file:${project.basedir}/repo</url>
		</repository>
	</repositories>

	<properties>
		<main.basedir>${basedir}/../..</main.basedir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.9</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
		<dependency>
			<groupId>com.dropbox.core</groupId>
			<artifactId>dropbox-core-sdk</artifactId>
			<version>2.0-beta-4</version>
		</dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>1.8.11</version>
        </dependency>
        <dependency>
            <groupId>uk.ac.glasgow.dcs.psd</groupId>
            <artifactId>tabula</artifactId>
            <version>0.8.0</version>
        </dependency>
	</dependencies>
    <build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>

					<!--
                      where is your javascript - default is src/main/javascript
                      below is a typical tomcat project
                      -->
					<jsSrcDir>${project.basedir}/src/main/resources/public/js</jsSrcDir>

					<!--
                      an ordered list of filters to match script source files
                      -->
					<sourceIncludes>
						<!--   add the ones you want first  -->
						<include>**/*.js</include>
					</sourceIncludes>

					<!--
                      an ordered list of filters to match script source files NOT to be included
                      -->
					<sourceExcludes>
						<exclude>**/modules/vendor/*.js</exclude>
					</sourceExcludes>

					<!--
                      where are your test script - default is src/test/javascript
                      below is a typical tomcat project
                      -->
					<jsTestSrcDir>${project.basedir}/src/test/javascript</jsTestSrcDir>

					<!--
                      an ordered list of filters to match script spec files NOT to be included
                      -->
					<specIncludes>
						<!--   add the ones you want first  -->
						<include>**/jasmine-*.js</include>
						<include>**/mock-ajax.js</include>
						<include>**/mock_responses.js</include>
						<!--   these are the defaults  -->
						<include>**/*.js</include>
						<include>**/*.coffee</include>
					</specIncludes>

					<!--
                      an ordered list of filters to match script source files NOT to be included
                      -->
					<specExcludes>
						<exclude>**/modules/vendor/*.js</exclude>
					</specExcludes>

					<!--
                      the port that the jasmine:bdd goal binds to
                      -->
					<serverPort>8234</serverPort>


					<!--
                      when true, specs won't be executed during the build
                      will most likely come in handy when set on the command line, like so:
                      mvn package -DskipTests
                      -->
					<skipTests>false</skipTests>

					<!--
                      the style with which the plugin outputs results during the build
                      values: progress (terse) or documentation (default)
                      -->
					<format>documentation</format>

					<!--
                      the type of browser HtmlUnit emulates when your specs run during the build
                      possible other value: INTERNET_EXPLORER_6, INTERNET_EXPLORER_7, INTERNET_EXPLORER_8
                      default: FIREFOX_3
                      see HtmlUnit documentation to see if any have been added since
                       -->
					<browserVersion>FIREFOX_3_6</browserVersion>

					<!--
                      when true, failing specs break the build
                      -->
					<haltOnFailure>false</haltOnFailure>

					<!--
                      The template used to generate the specRunner file
                      The default one is here:
                      https://github.com/searls/jasmine-maven-plugin/blob/master/src/main/resources/jasmine-templates/SpecRunner.htmltemplate


					<customRunnerTemplate>${project.basedir}/src/main/jasmine/ManualSpecRunner.html</customRunnerTemplate>
-->
					<!--
                      a list of to scripts that need to be loaded before any others.
                      Mostly useful to load remote scripts
                      -->
					<preloadSources>

					</preloadSources>

					<!--
                      when spec execution exceeds the timeout (in seconds), the build fails
                      -->
					<timeout>300</timeout>

					<!--
                      the name of the generated JUnit XML report
                      the plugin generates XML of the same brand JUnit does; this is handy for when your CI server is capable of aggregating these XML files (like Jenkins freestyle projects)
                      -->
					<junitXmlReportFileName>TEST-jasmine.xml</junitXmlReportFileName>

					<!--
                      True to increase HtmlUnit output and attempt reporting on specs even if a timeout occurred.
                      -->
					<debug>false</debug>

					<!--
                      Source encoding
                      -->
					<sourceEncoding>utf-8</sourceEncoding>
				</configuration>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
